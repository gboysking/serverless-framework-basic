service: cognito

useDotenv: true

plugins:
  - serverless-esbuild
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3000

provider:
  name: aws
  runtime: nodejs16.x
  lambdaHashingVersion: 20201221
  memorySize: 128
  timeout: 5
  stage: dev
  region: ap-northeast-2
  environment:
    STAGE: ${self:provider.stage}

functions:
  tokenAuthorizer:
    handler: src/auth/tokenAuthorizer.handler
  requestAuthorizer:
    handler: src/auth/requestAuthorizer.handler
  cognitoAuthorizer:
    handler: src/auth/cognitoAuthorizer.handler
    environment:
      AUTH_JWKS_URI: ${env:AUTH_JWKS_URI}
  cookieAuthorizer:
    handler: src/auth/cookieAuthorizer.handler
    environment:
      AUTH_JWKS_URI: ${env:AUTH_JWKS_URI}      
  app:
    handler: src/handler.app_handler
    events:
      - http:
          path: /app/{proxy+}
          method: ANY
          cors: true
  appToken:
    handler: src/handler.app_handler
    events:
      - http:
          path: /app-token/{proxy+}
          method: ANY
          cors: true
          authorizer:
            type: TOKEN
            name: tokenAuthorizer
            identitySource: method.request.header.Authorization                
  appRequest:
    handler: src/handler.app_handler
    events:
      - http:
          path: /app-request/{proxy+}
          method: ANY
          cors: true
          authorizer:
            type: REQUEST
            name: requestAuthorizer
            identitySource:
              - method.request.header.CustomHeader
  appUserToken:
    handler: src/handler.app_handler
    environment:
      COGNITO_USER_POOL_DOMAIN_NAME: ${env:COGNITO_USER_POOL_DOMAIN_NAME}      
    events:
      - http:
          path: /app-user-token/{proxy+}
          method: ANY
          cors: true
          authorizer:
            type: TOKEN
            name: cognitoAuthorizer
            resultTtlInSeconds: 0
            identityValidationExpression: ".*"                
  appUserCookie:
    handler: src/handler.app_handler
    environment:
      COGNITO_USER_POOL_DOMAIN_NAME: ${env:COGNITO_USER_POOL_DOMAIN_NAME}         
    events:
      - http:
          path: /app-user-cookie/{proxy+}
          method: ANY
          cors: true
          authorizer:
            type: REQUEST
            name: cookieAuthorizer
            identitySource:
              - method.request.header.Cookie    
            resultTtlInSeconds: 0
            identityValidationExpression: ".*"          
  authorize:
    handler: src/handler.authorize_handler
    environment:
      AUTH_AUTHORIZATION_URI: ${env:AUTH_AUTHORIZATION_URI}
      AUTH_TOKEN_URI: ${env:AUTH_TOKEN_URI}
      AUTH_CLIENT_ID: ${env:AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${env:AUTH_CLIENT_SECRET}
    events:
      - http:
          path: /authorize/{proxy+}
          method: ANY
          cors: true                               